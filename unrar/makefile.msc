# Microsoft Developer Studio Generated NMAKE File, Based on unrar.dsp
!IF "$(CFG)" == ""
CFG=unrar - Win32 Release
!MESSAGE No configuration specified. Defaulting to unrar - Win32 Release.
!ENDIF 

!IF "$(CFG)" != "unrar - Win32 Release" && "$(CFG)" != "unrar - Win32 Debug"
!MESSAGE Invalid configuration "$(CFG)" specified.
!MESSAGE You can specify a configuration when running NMAKE
!MESSAGE by defining the macro CFG on the command line. For example:
!MESSAGE 
!MESSAGE NMAKE /f "unrar.mak" CFG="unrar - Win32 Debug"
!MESSAGE 
!MESSAGE Possible choices for configuration are:
!MESSAGE 
!MESSAGE "unrar - Win32 Release" (based on "Win32 (x86) Console Application")
!MESSAGE "unrar - Win32 Debug" (based on "Win32 (x86) Console Application")
!MESSAGE 
!ERROR An invalid configuration is specified.
!ENDIF 

!IF "$(OS)" == "Windows_NT"
NULL=
!ELSE 
NULL=nul
!ENDIF 

CPP=cl.exe
RSC=rc.exe

!IF  "$(CFG)" == "unrar - Win32 Release"

OUTDIR=.\Release
INTDIR=.\Release
# Begin Custom Macros
OutDir=.\Release
# End Custom Macros

ALL : "$(OUTDIR)\unrar.exe"


CLEAN :
	-@erase "$(INTDIR)\archive.obj"
	-@erase "$(INTDIR)\arcread.obj"
	-@erase "$(INTDIR)\cmddata.obj"
	-@erase "$(INTDIR)\consio.obj"
	-@erase "$(INTDIR)\crc.obj"
	-@erase "$(INTDIR)\crypt.obj"
	-@erase "$(INTDIR)\encname.obj"
	-@erase "$(INTDIR)\errhnd.obj"
	-@erase "$(INTDIR)\extinfo.obj"
	-@erase "$(INTDIR)\extract.obj"
	-@erase "$(INTDIR)\filcreat.obj"
	-@erase "$(INTDIR)\file.obj"
	-@erase "$(INTDIR)\filefn.obj"
	-@erase "$(INTDIR)\filestr.obj"
	-@erase "$(INTDIR)\find.obj"
	-@erase "$(INTDIR)\getbits.obj"
	-@erase "$(INTDIR)\global.obj"
	-@erase "$(INTDIR)\int64.obj"
	-@erase "$(INTDIR)\isnt.obj"
	-@erase "$(INTDIR)\list.obj"
	-@erase "$(INTDIR)\match.obj"
	-@erase "$(INTDIR)\options.obj"
	-@erase "$(INTDIR)\pathfn.obj"
	-@erase "$(INTDIR)\rar.obj"
	-@erase "$(INTDIR)\rarvm.obj"
	-@erase "$(INTDIR)\rawread.obj"
	-@erase "$(INTDIR)\rdwrfn.obj"
	-@erase "$(INTDIR)\recvol.obj"
	-@erase "$(INTDIR)\resource.obj"
	-@erase "$(INTDIR)\rijndael.obj"
	-@erase "$(INTDIR)\rs.obj"
	-@erase "$(INTDIR)\savepos.obj"
	-@erase "$(INTDIR)\scantree.obj"
	-@erase "$(INTDIR)\sha1.obj"
	-@erase "$(INTDIR)\strfn.obj"
	-@erase "$(INTDIR)\strlist.obj"
	-@erase "$(INTDIR)\system.obj"
	-@erase "$(INTDIR)\timefn.obj"
	-@erase "$(INTDIR)\ulinks.obj"
	-@erase "$(INTDIR)\unicode.obj"
	-@erase "$(INTDIR)\unpack.obj"
	-@erase "$(INTDIR)\vc60.idb"
	-@erase "$(INTDIR)\volume.obj"
	-@erase "$(OUTDIR)\unrar.exe"
	-@erase "$(OUTDIR)\unrar.map"

"$(OUTDIR)" :
    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"

CPP_PROJ=/nologo /ML /W3 /GX /O2 /D "WIN32" /D "NDEBUG" /D "_CONSOLE" /D "_MBCS" /D "UNRAR" /Fp"$(INTDIR)\unrar.pch" /YX /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c 
BSC32=bscmake.exe
BSC32_FLAGS=/nologo /o"$(OUTDIR)\unrar.bsc" 
BSC32_SBRS= \
	
LINK32=link.exe
LINK32_FLAGS=kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib  kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /subsystem:console /incremental:no /pdb:"$(OUTDIR)\unrar.pdb" /map:"$(INTDIR)\unrar.map" /machine:I386 /out:"$(OUTDIR)\unrar.exe" 
LINK32_OBJS= \
	"$(INTDIR)\rar.obj" \
	"$(INTDIR)\strlist.obj" \
	"$(INTDIR)\strfn.obj" \
	"$(INTDIR)\pathfn.obj" \
	"$(INTDIR)\int64.obj" \
	"$(INTDIR)\savepos.obj" \
	"$(INTDIR)\global.obj" \
	"$(INTDIR)\file.obj" \
	"$(INTDIR)\filefn.obj" \
	"$(INTDIR)\filcreat.obj" \
	"$(INTDIR)\archive.obj" \
	"$(INTDIR)\arcread.obj" \
	"$(INTDIR)\unicode.obj" \
	"$(INTDIR)\system.obj" \
	"$(INTDIR)\isnt.obj" \
	"$(INTDIR)\crypt.obj" \
	"$(INTDIR)\crc.obj" \
	"$(INTDIR)\rawread.obj" \
	"$(INTDIR)\encname.obj" \
	"$(INTDIR)\resource.obj" \
	"$(INTDIR)\match.obj" \
	"$(INTDIR)\timefn.obj" \
	"$(INTDIR)\rdwrfn.obj" \
	"$(INTDIR)\consio.obj" \
	"$(INTDIR)\options.obj" \
	"$(INTDIR)\ulinks.obj" \
	"$(INTDIR)\errhnd.obj" \
	"$(INTDIR)\rarvm.obj" \
	"$(INTDIR)\rijndael.obj" \
	"$(INTDIR)\getbits.obj" \
	"$(INTDIR)\sha1.obj" \
	"$(INTDIR)\extinfo.obj" \
	"$(INTDIR)\extract.obj" \
	"$(INTDIR)\volume.obj" \
	"$(INTDIR)\list.obj" \
	"$(INTDIR)\find.obj" \
	"$(INTDIR)\unpack.obj" \
	"$(INTDIR)\cmddata.obj" \
	"$(INTDIR)\filestr.obj" \
	"$(INTDIR)\recvol.obj" \
	"$(INTDIR)\rs.obj" \
	"$(INTDIR)\scantree.obj"

"$(OUTDIR)\unrar.exe" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
    $(LINK32) @<<
  $(LINK32_FLAGS) $(LINK32_OBJS)
<<

!ELSEIF  "$(CFG)" == "unrar - Win32 Debug"

OUTDIR=.\Debug
INTDIR=.\Debug
# Begin Custom Macros
OutDir=.\Debug
# End Custom Macros

ALL : "$(OUTDIR)\unrar.exe"


CLEAN :
	-@erase "$(INTDIR)\archive.obj"
	-@erase "$(INTDIR)\arcread.obj"
	-@erase "$(INTDIR)\cmddata.obj"
	-@erase "$(INTDIR)\consio.obj"
	-@erase "$(INTDIR)\crc.obj"
	-@erase "$(INTDIR)\crypt.obj"
	-@erase "$(INTDIR)\encname.obj"
	-@erase "$(INTDIR)\errhnd.obj"
	-@erase "$(INTDIR)\extinfo.obj"
	-@erase "$(INTDIR)\extract.obj"
	-@erase "$(INTDIR)\filcreat.obj"
	-@erase "$(INTDIR)\file.obj"
	-@erase "$(INTDIR)\filefn.obj"
	-@erase "$(INTDIR)\filestr.obj"
	-@erase "$(INTDIR)\find.obj"
	-@erase "$(INTDIR)\getbits.obj"
	-@erase "$(INTDIR)\global.obj"
	-@erase "$(INTDIR)\int64.obj"
	-@erase "$(INTDIR)\isnt.obj"
	-@erase "$(INTDIR)\list.obj"
	-@erase "$(INTDIR)\match.obj"
	-@erase "$(INTDIR)\options.obj"
	-@erase "$(INTDIR)\pathfn.obj"
	-@erase "$(INTDIR)\rar.obj"
	-@erase "$(INTDIR)\rarvm.obj"
	-@erase "$(INTDIR)\rawread.obj"
	-@erase "$(INTDIR)\rdwrfn.obj"
	-@erase "$(INTDIR)\recvol.obj"
	-@erase "$(INTDIR)\resource.obj"
	-@erase "$(INTDIR)\rijndael.obj"
	-@erase "$(INTDIR)\rs.obj"
	-@erase "$(INTDIR)\savepos.obj"
	-@erase "$(INTDIR)\scantree.obj"
	-@erase "$(INTDIR)\sha1.obj"
	-@erase "$(INTDIR)\strfn.obj"
	-@erase "$(INTDIR)\strlist.obj"
	-@erase "$(INTDIR)\system.obj"
	-@erase "$(INTDIR)\timefn.obj"
	-@erase "$(INTDIR)\ulinks.obj"
	-@erase "$(INTDIR)\unicode.obj"
	-@erase "$(INTDIR)\unpack.obj"
	-@erase "$(INTDIR)\vc60.idb"
	-@erase "$(INTDIR)\vc60.pdb"
	-@erase "$(INTDIR)\volume.obj"
	-@erase "$(OUTDIR)\unrar.exe"
	-@erase "$(OUTDIR)\unrar.ilk"
	-@erase "$(OUTDIR)\unrar.pdb"

"$(OUTDIR)" :
    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"

CPP_PROJ=/nologo /MLd /W3 /Gm /GX /ZI /Od /D "WIN32" /D "_DEBUG" /D "_CONSOLE" /D "_MBCS" /D "UNRAR" /Fp"$(INTDIR)\unrar.pch" /YX /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /GZ  /c 
BSC32=bscmake.exe
BSC32_FLAGS=/nologo /o"$(OUTDIR)\unrar.bsc" 
BSC32_SBRS= \
	
LINK32=link.exe
LINK32_FLAGS=kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib  kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /subsystem:console /incremental:yes /pdb:"$(OUTDIR)\unrar.pdb" /debug /machine:I386 /out:"$(OUTDIR)\unrar.exe" /pdbtype:sept 
LINK32_OBJS= \
	"$(INTDIR)\rar.obj" \
	"$(INTDIR)\strlist.obj" \
	"$(INTDIR)\strfn.obj" \
	"$(INTDIR)\pathfn.obj" \
	"$(INTDIR)\int64.obj" \
	"$(INTDIR)\savepos.obj" \
	"$(INTDIR)\global.obj" \
	"$(INTDIR)\file.obj" \
	"$(INTDIR)\filefn.obj" \
	"$(INTDIR)\filcreat.obj" \
	"$(INTDIR)\archive.obj" \
	"$(INTDIR)\arcread.obj" \
	"$(INTDIR)\unicode.obj" \
	"$(INTDIR)\system.obj" \
	"$(INTDIR)\isnt.obj" \
	"$(INTDIR)\crypt.obj" \
	"$(INTDIR)\crc.obj" \
	"$(INTDIR)\rawread.obj" \
	"$(INTDIR)\encname.obj" \
	"$(INTDIR)\resource.obj" \
	"$(INTDIR)\match.obj" \
	"$(INTDIR)\timefn.obj" \
	"$(INTDIR)\rdwrfn.obj" \
	"$(INTDIR)\consio.obj" \
	"$(INTDIR)\options.obj" \
	"$(INTDIR)\ulinks.obj" \
	"$(INTDIR)\errhnd.obj" \
	"$(INTDIR)\rarvm.obj" \
	"$(INTDIR)\rijndael.obj" \
	"$(INTDIR)\getbits.obj" \
	"$(INTDIR)\sha1.obj" \
	"$(INTDIR)\extinfo.obj" \
	"$(INTDIR)\extract.obj" \
	"$(INTDIR)\volume.obj" \
	"$(INTDIR)\list.obj" \
	"$(INTDIR)\find.obj" \
	"$(INTDIR)\unpack.obj" \
	"$(INTDIR)\cmddata.obj" \
	"$(INTDIR)\filestr.obj" \
	"$(INTDIR)\recvol.obj" \
	"$(INTDIR)\rs.obj" \
	"$(INTDIR)\scantree.obj"

"$(OUTDIR)\unrar.exe" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
    $(LINK32) @<<
  $(LINK32_FLAGS) $(LINK32_OBJS)
<<

!ENDIF 

.c{$(INTDIR)}.obj::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cpp{$(INTDIR)}.obj::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cxx{$(INTDIR)}.obj::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.c{$(INTDIR)}.sbr::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cpp{$(INTDIR)}.sbr::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<

.cxx{$(INTDIR)}.sbr::
   $(CPP) @<<
   $(CPP_PROJ) $< 
<<


!IF "$(NO_EXTERNAL_DEPS)" != "1"
!IF EXISTS("msc.dep")
!INCLUDE "msc.dep"
!ELSE 
!MESSAGE Warning: cannot find "msc.dep"
!ENDIF 
!ENDIF 


!IF "$(CFG)" == "unrar - Win32 Release" || "$(CFG)" == "unrar - Win32 Debug"
SOURCE=.\archive.cpp

"$(INTDIR)\archive.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\arcread.cpp

"$(INTDIR)\arcread.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\cmddata.cpp

"$(INTDIR)\cmddata.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\consio.cpp

"$(INTDIR)\consio.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\crc.cpp

"$(INTDIR)\crc.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\crypt.cpp

"$(INTDIR)\crypt.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\encname.cpp

"$(INTDIR)\encname.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\errhnd.cpp

"$(INTDIR)\errhnd.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\extinfo.cpp

"$(INTDIR)\extinfo.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\extract.cpp

"$(INTDIR)\extract.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\filcreat.cpp

"$(INTDIR)\filcreat.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\file.cpp

"$(INTDIR)\file.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\filefn.cpp

"$(INTDIR)\filefn.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\filestr.cpp

"$(INTDIR)\filestr.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\find.cpp

"$(INTDIR)\find.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\getbits.cpp

"$(INTDIR)\getbits.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\global.cpp

"$(INTDIR)\global.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\int64.cpp

"$(INTDIR)\int64.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\isnt.cpp

"$(INTDIR)\isnt.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\list.cpp

"$(INTDIR)\list.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\match.cpp

"$(INTDIR)\match.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\options.cpp

"$(INTDIR)\options.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\pathfn.cpp

"$(INTDIR)\pathfn.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\rar.cpp

"$(INTDIR)\rar.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\rarvm.cpp

"$(INTDIR)\rarvm.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\rawread.cpp

"$(INTDIR)\rawread.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\rdwrfn.cpp

"$(INTDIR)\rdwrfn.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\recvol.cpp

"$(INTDIR)\recvol.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\resource.cpp

"$(INTDIR)\resource.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\rijndael.cpp

"$(INTDIR)\rijndael.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\rs.cpp

"$(INTDIR)\rs.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\savepos.cpp

"$(INTDIR)\savepos.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\scantree.cpp

"$(INTDIR)\scantree.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\sha1.cpp

"$(INTDIR)\sha1.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\strfn.cpp

"$(INTDIR)\strfn.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\strlist.cpp

"$(INTDIR)\strlist.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\system.cpp

"$(INTDIR)\system.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\timefn.cpp

"$(INTDIR)\timefn.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\ulinks.cpp

"$(INTDIR)\ulinks.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\unicode.cpp

"$(INTDIR)\unicode.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\unpack.cpp

"$(INTDIR)\unpack.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)


SOURCE=.\volume.cpp

"$(INTDIR)\volume.obj" : $(SOURCE) "$(INTDIR)"
	$(CPP) $(CPP_PROJ) $(SOURCE)



!ENDIF 

