AC_INIT(install.c)

dnl Define the release numbers here

SETUP_VERSION_MAJOR=1
SETUP_VERSION_MINOR=5
SETUP_VERSION_RELEASE=8

dnl Detect the canonical host and target build environment
AC_CANONICAL_HOST
AC_CANONICAL_TARGET

AC_PROG_CC
AC_PROG_MAKE_SET
AC_PROG_INSTALL

AC_PATH_X
AC_CHECK_HEADERS(unistd.h)
AC_CHECK_HEADERS(pwd.h)
AC_CHECK_HEADERS(gtk.h)

CFLAGS="-fsigned-char -funroll-loops -Wall -g -O2 -I. $X_CFLAGS"

LIBS="-L/usr/local/lib -L$x_libraries"
AC_CHECK_LIB(intl, gettext, USE_LIBINTL=yes)
dnl Check for gtk12 libraries in case those are available (FreeBSD)
AC_CHECK_LIB(gdk12, gdk_init, GTK12="12")

AC_CHECK_LIB(dl, dlopen, USE_LIBDL=yes)

case "$target" in
    *i?86*)
        ARCH=x86 ;;
    *alpha*)
        CFLAGS="$CFLAGS -mcpu=ev4 -Wa,-mall"
        ARCH=alpha ;; 
    *)
        ARCH=`uname -m` ;;
esac

dnl Detect the LibC version
AC_MSG_CHECKING(libc version)
if test `uname -s` != Linux; then
    LIBC=glibc-2.1
else
      if test -f `echo /lib/libc.so.6* | tail -1`; then
              if grep GLIBC_2.1 /lib/libc.so.6* 2>&1 >/dev/null; then
                      LIBC="glibc-2.1"
              else
                      LIBC="glibc-2.0"
              fi        
      elif [ -f /lib/libc.so.5 ]; then
              LIBC="libc5"
      else
              LIBC="unknown"
      fi
fi
AC_MSG_RESULT($LIBC)

PLUGINS="tar.c"
GUI_LIBS="-Wl,-Bstatic"

dnl Look for the XML libraries

AC_PATH_PROG(HAVEXML, xml-config, $PATH)
if test ! -z "$HAVEXML"; then
    XML_CFLAGS=`$HAVEXML --cflags`
    XML_PREFIX=`$HAVEXML --prefix`

    CFLAGS="$CFLAGS $XML_CFLAGS"
    LIBS="$LIBS $XML_PREFIX/lib/libxml.a"
    GUI_LIBS="$GUI_LIBS $XML_PREFIX/lib/libxml.a"
else
    AC_MSG_ERROR([*** xml-config not found. You need a working libxml installation.])
fi

dnl Check for libglade

AC_PATH_PROG(HAVEGLADE, libglade-config, $PATH)
if test ! -z "$HAVEGLADE"; then
    GLADE_CFLAGS=`$HAVEGLADE --cflags`
    GLADE_PREFIX=`$HAVEGLADE --prefix`

    CFLAGS="$CFLAGS $GLADE_CFLAGS"
    GUI_LIBS="$GUI_LIBS -L$GLADE_PREFIX/lib -lglade"
else
    AC_MSG_ERROR([*** libglade-config not found. You need a working libglade installation.])
fi

dnl Check for GTK
AC_PATH_PROG(HAVEGTK, gtk-config, $PATH)
if test ! -z "$HAVEGTK"; then
    GTK_CFLAGS=`$HAVEGTK --cflags`
    GTK_PREFIX=`$HAVEGTK --prefix`

    CFLAGS="$CFLAGS $GTK_CFLAGS"
    GUI_LIBS="$GUI_LIBS -L$GTK_PREFIX/lib -lgtk$GTK12 -lgdk$GTK12 -rdynamic -lgmodule$GTK12 -lglib$GTK12"
else
    AC_MSG_ERROR([*** gtk-config not found. You need a working GTK+ 1.2 installation.])
fi

dnl enable RPM support
AC_ARG_ENABLE(rpm,
[  --enable-rpm              enable RPM archives support  [default=no]],
              , enable_rpm=no)
if test x$enable_rpm = xyes; then
        CFLAGS="$CFLAGS -DRPM_SUPPORT -I/usr/include/rpm"
        PLUGINS="$PLUGINS rpm.c"
        LIBS="$LIBS -lrpm -ldb"
        GUI_LIBS="$GUI_LIBS -lrpm -ldb"
        AC_DEFINE(ENABLE_RPM)
fi

if test ! -z "$USE_LIBINTL"; then
	LIBS="$LIBS -lintl"
	GUI_LIBS="$GUI_LIBS -lintl"
fi

GUI_LIBS="$GUI_LIBS -Wl,-Bdynamic $X_PRE_LIBS -L$x_libraries -lXi -lXext -lX11 -lm"
if test ! -z "$HAVEGTK"; then
    if test ! -z "$USE_LIBDL"; then
        GUI_LIBS="$GUI_LIBS -ldl"
    fi
fi

dnl Check for various options

dnl enable dynamic plugins ?

DYN_PLUGINS=false
AC_ARG_ENABLE(dynamic-plugins,
[  --enable-dynamic-plugins  enable dynamic plugins       [default=no]],
              , enable_dynamic=no)
if test x$enable_dynamic = xyes; then
        CFLAGS="$CFLAGS -DDYNAMIC_PLUGINS"
        LIBS="$LIBS -ldl"
        GUI_LIBS="$GUI_LIBS -ldl"
        DYN_PLUGINS=true
        AC_DEFINE(DYNAMIC_PLUGINS)
fi

dnl enable the Outrage plugin (proprietary)
AC_ARG_ENABLE(outrage,
[  --enable-outrage          enable the Outrage plugin    [default=no]],
              , enable_outrage=no)
if test x$enable_outrage = xyes; then
        CFLAGS="$CFLAGS -DOUTRAGE_SUPPORT"
        PLUGINS="$PLUGINS outrage.c"
        AC_DEFINE(ENABLE_OUTRAGE)
fi

SETUPDB_VERSION=1.0.0
SETUPDB="`pwd`/../setupdb-$SETUPDB_VERSION"
if test ! -d "$SETUPDB"; then
    SETUPDB="`pwd`/../setupdb"
fi

AC_ARG_WITH(setupdb,
[  --with-setupdb            with setupdb library at      [default=../setupdb]],
              ,   with_setupdb=$SETUPDB)
if test x$with_setupdb != x$SETUPDB; then
        SETUPDB=$with_setupdb
fi

dnl Check for correct setupdb installation

if test -f $SETUPDB/$ARCH/libsetupdb.a; then
    AC_MSG_RESULT([SetupDB library found in $SETUPDB/$ARCH])
else
    AC_MSG_ERROR([*** Please compile setupdb first!])
fi

CFLAGS="$CFLAGS -I$SETUPDB"
OS=`uname -s`

AC_SUBST(SETUPDB)
AC_SUBST(PLUGINS)
AC_SUBST(DYN_PLUGINS)
AC_SUBST(GUI_LIBS)
AC_SUBST(ARCH)
AC_SUBST(LIBC)
AC_SUBST(OS)
AC_SUBST(SETUP_VERSION_MAJOR)
AC_SUBST(SETUP_VERSION_MINOR)
AC_SUBST(SETUP_VERSION_RELEASE)

AC_OUTPUT([Makefile plugins/Makefile])
